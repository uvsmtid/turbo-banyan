# AWS build spec: https://docs.aws.amazon.com/codebuild/latest/userguide/build-spec-ref.html

version: 0.2

phases:

    install:
        runtime-versions:
            java: corretto8
            # TODO: is this required (if mvn package already succeeds?
            docker: 18

    pre_build:
        commands:

            - echo before pwd
            - pwd

            - echo before whoami
            - whoami

            - echo aws ecr
            - $(aws ecr get-login --no-include-email --region $AWS_DEFAULT_REGION)

    build:
        commands:

            # TODO: clean up - it is used to debug local cache (for local Maven repo in this case):
            # show path to local repository:
            - echo before mvn:evaluate
            # TODO: use `--activate-profiles build-pipeline`
            - mvn help:evaluate -Dexpression=settings.localRepository

            - echo before mvn package
            # TODO: use `--activate-profiles build-pipeline`
            - mvn -DIMAGE_REPO_NAME=$IMAGE_REPO_NAME -DIMAGE_TAG=$IMAGE_TAG package

            - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG

    post_build:
        commands:

            - echo before docker push
            - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG

            # See:
            # https://docs.aws.amazon.com/codepipeline/latest/userguide/ecs-cd-pipeline.html
            - printf '[{"name":"turbo-banyan-student-service","imageUri":"%s"}]' $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG > imagedefinitions.json

artifacts:
    files:
        # TODO: clean up
        #- target/turbo-banyan-student-service.jar
        #- appspec.yaml
        - imagedefinitions.json
    discard-paths: yes

cache:
    paths:
        - '/root/.m2/'
